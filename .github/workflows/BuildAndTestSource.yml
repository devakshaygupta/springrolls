name: Build Test and Deploy

on:
  pull_request:
    types: [opened, synchronize, closed]
    branches: ["main"]
    paths:
      - "src/**"

  workflow_dispatch:

jobs:
  build_test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven

      - name: Build with Maven
        if: github.event_name == 'pull_request' && github.event.action != 'closed'
        run: mvn -B package --file pom.xml

      - name: Test with Maven
        if: github.event_name == 'pull_request' && github.event.action != 'closed'
        run: mvn test

      - name: Upload artifact
        if: github.event_name == 'pull_request' && github.event.action != 'closed'
        uses: actions/upload-artifact@v2
        with:
          name: springrolls-jar
          path: target/springrolls-0.0.1-SNAPSHOT.jar

  deploy:
    name: Deploy to EC2
    needs: build_test
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: springrolls-jar

      - name: Checking for Artifact
        run: |
          if [ -f "springrolls-0.0.1-SNAPSHOT.jar" ]
          then
            echo "Artifact Downloaded!!"
          fi

      - name: Set up SSH Key
        run: |
          echo "${{ secrets.DEV_KEY_PAIR }}" >> SpringKeyPair.pem
          chmod 400 SpringKeyPair.pem

      - name: Deploy to EC2
        run: |
          echo "Copying jar to EC2 Instance..."
          scp -i "SpringKeyPair.pem" -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no springrolls-0.0.1-SNAPSHOT.jar ${{ secrets.DEV_INSTANCE_IP }}:${{ secrets.TARGET_DIR }}
          echo "Jar Copied successfully!!!"
          echo "Attempting logging to machine..."
          ssh -i "SpringKeyPair.pem" -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no ${{ secrets.DEV_INSTANCE_IP }} <<EOF
            echo "Switching to application directory"          
            cd springrolls
            echo "Stopping the existing application"
            pkill -f "java -jar ${{ secrets.TARGET_DIR }}/springrolls-0.0.1-SNAPSHOT.jar"
            echo "Starting the new version of the application"
            nohup java -jar ${{ secrets.TARGET_DIR }}/springrolls-0.0.1-SNAPSHOT.jar > /dev/null 2>&1 &
            echo "Application Started!!!"
            exit
          EOF
